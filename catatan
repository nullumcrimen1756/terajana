$UpdateSvc = New-Object -ComObject Microsoft.Update.ServiceManager
$UpdateSvc.AddService2("7971f918-a847-4430-9279-4a52d1efe18d",7,"")
$Session = New-Object -ComObject Microsoft.Update.Session
$Searcher = $Session.CreateUpdateSearcher()
$Searcher.ServiceID = '7971f918-a847-4430-9279-4a52d1efe18d'
$Searcher.SearchScope = 1  # MachineOnly
$Searcher.ServerSelection = 3 # Third Party
$Criteria = "IsInstalled=0 and Type='Driver'"
Write-Host 'Searching Driver-Updates...' –ForegroundColor Green
$SearchResult = $Searcher.Search($Criteria)
$Updates = $SearchResult.Updates

if ([string]::IsNullOrEmpty($Updates)) {
    Write-Host "No pending driver updates."
} else {
    $Updates | select Title, DriverModel, DriverVerDate, Driverclass, DriverManufacturer | Format-List
    $UpdatesToDownload = New-Object -Com Microsoft.Update.UpdateColl
    $Updates | Foreach-Object { $UpdatesToDownload.Add($_) | Out-Null }
    Write-Host 'Downloading Drivers...' –ForegroundColor Green
    $Downloader = $Session.CreateUpdateDownloader()
    $Downloader.Updates = $UpdatesToDownload
    $Downloader.Download()
    $UpdatesToInstall = New-Object -Com Microsoft.Update.UpdateColl
    $Updates | Foreach-Object { if ($_.IsDownloaded) { $UpdatesToInstall.Add($_) | Out-Null } }
    Write-Host 'Installing Drivers...' –ForegroundColor Green
    $Installer = $Session.CreateUpdateInstaller()
    $Installer.Updates = $UpdatesToInstall
    $InstallationResult = $Installer.Install()
    if ($InstallationResult.RebootRequired) {
        Write-Host 'Reboot required! Please reboot now.' –ForegroundColor Red
    } else {
        Write-Host 'Done.' –ForegroundColor Green
    }
    $UpdateSvc.Services | Where-Object { $_.IsDefaultAUService -eq $false -and $_.ServiceID -eq "7971f918-a847-4430-9279-4a52d1efe18d" } | ForEach-Object {
        $UpdateSvc.RemoveService($_.ServiceID)
    }
}
